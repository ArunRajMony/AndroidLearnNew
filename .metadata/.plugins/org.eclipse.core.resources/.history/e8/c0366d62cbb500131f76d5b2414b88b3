package com.sirpum.trial.trialbluetooth;

import java.io.IOException;
import java.util.Set;
import java.util.UUID;

import android.bluetooth.BluetoothAdapter;
import android.bluetooth.BluetoothDevice;
import android.bluetooth.BluetoothSocket;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v7.app.ActionBarActivity;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;

public class MainActivityBlueTooth extends ActionBarActivity {
	
	final String myappName="MyBluetooth";

	final int REQUEST_ENABLE_BT = 999; 
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main_activity_blue_tooth);

		if (savedInstanceState == null) {
			getSupportFragmentManager().beginTransaction()
					.add(R.id.container, new PlaceholderFragment()).commit();
		}
		
		/*
		 * added by arajmony 
		 *  
		 */
		
		BluetoothAdapter bluetoothAdapter = BluetoothAdapter.getDefaultAdapter();
		if (bluetoothAdapter == null) {
			Log.w(myappName,"the device does not suport bluetooth");

		}else
			Log.i(myappName,"supports BLUETOOTH ##########");
		
		if (!bluetoothAdapter.isEnabled()) {
		    Intent enableBtIntent = new Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);
		    startActivityForResult(enableBtIntent, REQUEST_ENABLE_BT);
		}
		
		Set<BluetoothDevice> pairedDevices = bluetoothAdapter.getBondedDevices();
		// If there are paired devices
		if (pairedDevices.size() > 0) {
		    // Loop through paired devices
		    for (BluetoothDevice device : pairedDevices) {
		        // Add the name and address to an array adapter to show in a ListView
		        //mArrayAdapter.add(device.getName() + "\n" + device.getAddress());
		    	
               Log.i(myappName,"Device details : "+ device.getName() + "    ;    " + device.getAddress() +"\n");		    	

		    }
		}
		
		
		
		// Create a BroadcastReceiver for ACTION_FOUND
		BroadcastReceiver mReceiver = new BroadcastReceiver() {
		    public void onReceive(Context context, Intent intent) {
		        String action = intent.getAction();
		        // When discovery finds a device
		        if (BluetoothDevice.ACTION_FOUND.equals(action)) {
		            // Get the BluetoothDevice object from the Intent
		            BluetoothDevice device = intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE);
		            // Add the name and address to an array adapter to show in a ListView
		            //mArrayAdapter.add(device.getName() + "\n" + device.getAddress());
		            Log.i(myappName, "Device Discovered : " +device.getName() + "\t" + device.getAddress());
		            
		            connectToTheDiscoveredDevice(device );
		        }
		    }

		
		};
		// Register the BroadcastReceiver
		IntentFilter filter = new IntentFilter(BluetoothDevice.ACTION_FOUND);
		registerReceiver(mReceiver, filter); // Don't forget to unregister during onDestroy
		
		bluetoothAdapter.startDiscovery();

		
		Log.i(myappName, "end of the onCreate()");
	}

	
	
	private void connectToTheDiscoveredDevice(BluetoothDevice device) {
		
		UUID uuid = UUID.randomUUID();
		try {
			Log.i(myappName, "going to create connection with device " + device);
			BluetoothSocket clientSocket = device.createRfcommSocketToServiceRecord(uuid);
			Log.i(myappName, clientSocket.getRemoteDevice().getName());
			clientSocket.connect();
			if(clientSocket.isConnected())
				Log.i(myappName, "connected with remote device ");
			else
				Log.w(myappName, "could not connect ");
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	
	@Override
	public boolean onCreateOptionsMenu(Menu menu) {

		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main_activity_blue_tooth, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}

	/**
	 * A placeholder fragment containing a simple view.
	 */
	public static class PlaceholderFragment extends Fragment {

		public PlaceholderFragment() {
		}

		@Override
		public View onCreateView(LayoutInflater inflater, ViewGroup container,
				Bundle savedInstanceState) {
			View rootView = inflater.inflate(
					R.layout.fragment_main_activity_blue_tooth, container,
					false);
			return rootView;
		}
	}

}
